{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport { UserContext } from '../../User';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Projects(_ref) {\n  _s();\n  var _selectedProject$task, _selectedProject$task2;\n  let {\n    handleProjectDelete\n  } = _ref;\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const {\n    user,\n    refreshUser\n  } = useContext(UserContext);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch('/check_session');\n        const sessionData = await sessionResponse.json();\n        const userId = sessionData.id;\n        const response = await fetch(`/projects?user_id=${userId}`);\n        const data = await response.json();\n        const projectsWithUserId = data.map(project => ({\n          ...project,\n          user_id: userId\n        }));\n        setProjects(projectsWithUserId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handleDelete = projectId => {\n    console.log('Deleting project with ID:', projectId);\n    fetch(`/projects/${projectId}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      refreshUser();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleEdit = project => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n  const handleDeleteModal = project => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n  const handleUpdateProject = async updatedProject => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedProject)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n      const data = await response.json();\n      setProjects(projects => projects.map(project => project.id === data.id ? data : project));\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {}\n  };\n  const handleTasksModal = project => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n  };\n  const handleAddTask = async newTask => {\n    try {\n      const response = await fetch(`/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add task.');\n      }\n      const data = await response.json();\n      setTasks([...tasks, data]);\n      setShowAddTaskModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const projectComponents = ((user === null || user === void 0 ? void 0 : user.projects) || []).map(eachProject => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: eachProject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: eachProject.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: eachProject === null || eachProject === void 0 ? void 0 : eachProject.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => handleEdit(eachProject),\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"green\",\n          onClick: () => handleTasksModal(eachProject),\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => handleDeleteModal(eachProject),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, eachProject.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProjectForm, {\n        setProjects: setProjects,\n        projects: projects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: projectComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showEditModal,\n      onClose: () => {\n        setShowEditModal(false);\n        setEditingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Manage Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(EditProjectForm, {\n          project: editingProject,\n          handleUpdateProject: handleUpdateProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showDeleteModal,\n      onClose: () => {\n        setShowDeleteModal(false);\n        setDeletingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Delete Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete \", deletingProject === null || deletingProject === void 0 ? void 0 : deletingProject.name, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => {\n            handleDelete(deletingProject.id);\n            setShowDeleteModal(false);\n            setDeletingProject(null);\n            handleProjectDelete = {\n              handleProjectDelete\n            };\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showTasksModal,\n      onClose: () => {\n        setShowTasksModal(false);\n        setSelectedProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.name, \" Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: (selectedProject === null || selectedProject === void 0 ? void 0 : (_selectedProject$task = selectedProject.tasks) === null || _selectedProject$task === void 0 ? void 0 : _selectedProject$task.length) === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tasks assigned to this project.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Card.Group, {\n          children: selectedProject === null || selectedProject === void 0 ? void 0 : (_selectedProject$task2 = selectedProject.tasks) === null || _selectedProject$task2 === void 0 ? void 0 : _selectedProject$task2.map(task => /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => handleTaskClick(task),\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setShowTasksModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: !!selectedTask,\n      onClose: () => setSelectedTask(null),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setSelectedTask(null),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(Projects, \"NMZA9Ab6TZm/zz6FRKE0etjPOLY=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Modal","ProjectForm","EditProjectForm","UserContext","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_ref","_s","_selectedProject$task","_selectedProject$task2","handleProjectDelete","projects","setProjects","editingProject","setEditingProject","showEditModal","setShowEditModal","deletingProject","setDeletingProject","showDeleteModal","setShowDeleteModal","selectedProject","setSelectedProject","showTasksModal","setShowTasksModal","selectedTask","setSelectedTask","user","refreshUser","tasks","setTasks","fetchData","sessionResponse","fetch","sessionData","json","userId","id","response","data","projectsWithUserId","map","project","user_id","error","console","log","handleDelete","projectId","method","then","catch","handleEdit","handleDeleteModal","handleUpdateProject","updatedProject","headers","body","JSON","stringify","ok","Error","handleTasksModal","handleTaskClick","task","handleAddTask","newTask","setShowAddTaskModal","projectComponents","eachProject","children","Content","Header","name","fileName","_jsxFileName","lineNumber","columnNumber","Meta","status","Description","description","extra","basic","color","onClick","className","open","onClose","Actions","length","Group","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport { UserContext } from '../../User';\nimport { useContext } from 'react';\n\n\nfunction Projects({handleProjectDelete}) {\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const {user, refreshUser} = useContext(UserContext)\n  const [tasks, setTasks] = useState([]);\n\n\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch('/check_session');\n        const sessionData = await sessionResponse.json();\n        const userId = sessionData.id;\n        const response = await fetch(`/projects?user_id=${userId}`);\n        const data = await response.json();\n        \n        const projectsWithUserId = data.map(project => ({\n          ...project,\n          user_id: userId,\n        }));\n        setProjects(projectsWithUserId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  \n    fetchData();\n  }, []);\n\n  const handleDelete = (projectId) => {\n    console.log('Deleting project with ID:', projectId);\n    fetch(`/projects/${projectId}`, { method: \"DELETE\" })\n      .then(() => {\n        refreshUser();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  \n\n  const handleEdit = (project) => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n\n  const handleDeleteModal = (project) => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n\n  const handleUpdateProject = async (updatedProject) => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedProject),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n\n      const data = await response.json();\n      setProjects((projects) =>\n        projects.map((project) => (project.id === data.id ? data : project))\n      );\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {\n    }\n  };\n\n  const handleTasksModal = (project) => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n\n  const handleTaskClick = (task) => {\n    setSelectedTask(task);\n  };\n\n  const handleAddTask = async (newTask) => {\n    try {\n      const response = await fetch(`/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newTask),\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to add task.');\n      }\n  \n      const data = await response.json();\n      setTasks([...tasks, data]);\n      setShowAddTaskModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };  \n\nconst projectComponents = (user?.projects || []).map((eachProject) => {\n    return (\n      <Card key={eachProject.id}>\n        <Card.Content>\n          <Card.Header>{eachProject.name}</Card.Header>\n          <Card.Meta>{eachProject.status}</Card.Meta>\n          <Card.Description>{eachProject?.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic color='blue' onClick={() => handleEdit(eachProject)}>Manage</Button>\n          <Button basic color='green' onClick={() => handleTasksModal(eachProject)}>Tasks</Button>\n          <Button basic color='red' onClick={() => handleDeleteModal(eachProject)}>Delete</Button>\n        </Card.Content>\n      </Card>\n    );\n  });\n\n  return (\n    <>\n      <div>\n      <ProjectForm setProjects={setProjects} projects={projects} />\n      </div>\n      <div className=\"projects-container\">{projectComponents}</div>\n      <Modal\n    open={showEditModal}\n    onClose={() => {\n      setShowEditModal(false);\n      setEditingProject(null);\n    }}\n  >\n    <Modal.Header>Manage Project</Modal.Header>\n    <Modal.Content>\n      <EditProjectForm\n        project={editingProject}\n        handleUpdateProject={handleUpdateProject}\n      />\n    </Modal.Content>\n  </Modal>\n  <Modal\n  open={showDeleteModal}\n  onClose={() => {\n    setShowDeleteModal(false);\n    setDeletingProject(null);\n  }}\n>\n  <Modal.Header>Delete Project</Modal.Header>\n  <Modal.Content>\n    <p>Are you sure you want to delete {deletingProject?.name}?</p>\n  </Modal.Content>\n  <Modal.Actions>\n    <Button\n      basic\n      color=\"red\"\n      onClick={() => {\n        handleDelete(deletingProject.id);\n        setShowDeleteModal(false);\n        setDeletingProject(null);\n        handleProjectDelete = {handleProjectDelete}\n        \n      }}\n    >\n      Delete\n    </Button>\n    <Button basic color=\"blue\" onClick={() => setShowDeleteModal(false)}>\n      Cancel\n    </Button>\n  </Modal.Actions>\n</Modal>\n  <Modal\n    open={showTasksModal}\n    onClose={() => {\n      setShowTasksModal(false);\n      setSelectedProject(null);\n\n    }}\n  >\n    <Modal.Header>{selectedProject?.name} Tasks</Modal.Header>\n    <Modal.Content>\n      {selectedProject?.tasks?.length === 0 ? (\n        <p>No tasks assigned to this project.</p>\n      ) : (\n        <Card.Group>\n          {selectedProject?.tasks?.map((task) => (\n            <Card key={task.id} onClick={() => handleTaskClick(task)}>\n              <Card.Content>\n                <Card.Header>{task.name}</Card.Header>\n                <Card.Meta>{task.status}</Card.Meta>\n              </Card.Content>\n            </Card>\n          ))}\n        </Card.Group>\n      )}\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color=\"blue\" onClick={() => setShowTasksModal(false)}>\n        Close\n      </Button>\n    </Modal.Actions>\n  </Modal>\n  <Modal\n    open={!!selectedTask}\n    onClose={() => setSelectedTask(null)}\n  >\n    <Modal.Header>{selectedTask?.name}</Modal.Header>\n    <Modal.Content>\n      <p>Description: {selectedTask?.description}</p>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color=\"blue\" onClick={() => setSelectedTask(null)}>\n        Close\n      </Button>\n    </Modal.Actions>\n  </Modal>\n\n</>\n);\n          }\n\nexport default Projects;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}