{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport Tasks from '../Tasks/Tasks';\nimport { UserContext } from '../../User';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Projects(_ref) {\n  _s();\n  var _selectedProject$task, _selectedProject$task2;\n  let {\n    handleProjectDelete\n  } = _ref;\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const {\n    user,\n    refreshUser\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch(\"/check_session\");\n        const sessionData = await sessionResponse.json();\n        const userId = sessionData.id;\n        const response = await fetch(`/projects?user_id=${userId}`);\n        const data = await response.json();\n        const projectsWithUserId = data.map(project => ({\n          ...project,\n          user_id: userId\n        }));\n        setProjects(projectsWithUserId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handleDelete = projectId => {\n    console.log(\"Deleting project with ID:\", projectId);\n    fetch(`/projects/${projectId}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      refreshUser();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleEdit = project => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n  const handleDeleteModal = project => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n  const handleUpdateProject = async updatedProject => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedProject)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update project.\");\n      }\n      const data = await response.json();\n      setProjects(projects => projects.map(project => project.id === data.id ? data : project));\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {}\n  };\n  const handleTasksModal = project => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setSelectedProject(task.project);\n  };\n  const handleAddTask = async newTask => {\n    try {\n      const response = await fetch(`/projects/${selectedProject.id}/tasks`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add task.\");\n      }\n      const data = await response.json();\n      setSelectedProject(prevProject => ({\n        ...prevProject,\n        tasks: [...prevProject.tasks, data]\n      }));\n      setShowAddTaskModal(false);\n    } catch (error) {}\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`/projects/${selectedProject.id}/tasks/${taskId}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete task.\");\n      }\n      setSelectedProject(prevProject => ({\n        ...prevProject,\n        tasks: prevProject.tasks.filter(task => task.id !== taskId)\n      }));\n    } catch (error) {}\n  };\n  const projectComponents = ((user === null || user === void 0 ? void 0 : user.projects) || []).map(eachProject => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: eachProject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: eachProject.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: eachProject === null || eachProject === void 0 ? void 0 : eachProject.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => handleEdit(eachProject),\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"green\",\n          onClick: () => handleTasksModal(eachProject),\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => handleDeleteModal(eachProject),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, eachProject.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProjectForm, {\n        setProjects: setProjects,\n        projects: projects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: projectComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showEditModal,\n      onClose: () => {\n        setShowEditModal(false);\n        setEditingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Manage Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(EditProjectForm, {\n          project: editingProject,\n          handleUpdateProject: handleUpdateProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showDeleteModal,\n      onClose: () => {\n        setShowDeleteModal(false);\n        setDeletingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Delete Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete \", deletingProject === null || deletingProject === void 0 ? void 0 : deletingProject.name, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => {\n            handleDelete(deletingProject.id);\n            setShowDeleteModal(false);\n            setDeletingProject(null);\n            handleProjectDelete = {\n              handleProjectDelete\n            };\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showTasksModal,\n      onClose: () => {\n        setShowTasksModal(false);\n        setSelectedProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.name, \" Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: (selectedProject === null || selectedProject === void 0 ? void 0 : (_selectedProject$task = selectedProject.tasks) === null || _selectedProject$task === void 0 ? void 0 : _selectedProject$task.length) === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tasks assigned to this project.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Card.Group, {\n          children: selectedProject === null || selectedProject === void 0 ? void 0 : (_selectedProject$task2 = selectedProject.tasks) === null || _selectedProject$task2 === void 0 ? void 0 : _selectedProject$task2.map(task => /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => handleTaskClick(task),\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setShowTasksModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: !!selectedTask,\n      onClose: () => setSelectedTask(null),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setSelectedTask(null),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(Projects, \"0H9ds0rh76g4LlL80veTVV+HJBg=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Modal","ProjectForm","EditProjectForm","Tasks","UserContext","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_ref","_s","_selectedProject$task","_selectedProject$task2","handleProjectDelete","projects","setProjects","editingProject","setEditingProject","showEditModal","setShowEditModal","deletingProject","setDeletingProject","showDeleteModal","setShowDeleteModal","selectedProject","setSelectedProject","showTasksModal","setShowTasksModal","selectedTask","setSelectedTask","showAddTaskModal","setShowAddTaskModal","user","refreshUser","fetchData","sessionResponse","fetch","sessionData","json","userId","id","response","data","projectsWithUserId","map","project","user_id","error","console","log","handleDelete","projectId","method","then","catch","handleEdit","handleDeleteModal","handleUpdateProject","updatedProject","headers","body","JSON","stringify","ok","Error","handleTasksModal","handleTaskClick","task","handleAddTask","newTask","prevProject","tasks","handleDeleteTask","taskId","filter","projectComponents","eachProject","children","Content","Header","name","fileName","_jsxFileName","lineNumber","columnNumber","Meta","status","Description","description","extra","basic","color","onClick","className","open","onClose","Actions","length","Group","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport Tasks from '../Tasks/Tasks';\nimport { UserContext } from '../../User';\nimport { useContext } from 'react';\n\n\nfunction Projects({ handleProjectDelete }) {\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const { user, refreshUser } = useContext(UserContext);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch(\"/check_session\");\n        const sessionData = await sessionResponse.json();\n        const userId = sessionData.id;\n        const response = await fetch(`/projects?user_id=${userId}`);\n        const data = await response.json();\n\n        const projectsWithUserId = data.map((project) => ({\n          ...project,\n          user_id: userId,\n        }));\n        setProjects(projectsWithUserId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleDelete = (projectId) => {\n    console.log(\"Deleting project with ID:\", projectId);\n    fetch(`/projects/${projectId}`, { method: \"DELETE\" })\n      .then(() => {\n        refreshUser();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleEdit = (project) => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n\n  const handleDeleteModal = (project) => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n\n  const handleUpdateProject = async (updatedProject) => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedProject),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update project.\");\n      }\n\n      const data = await response.json();\n      setProjects((projects) =>\n        projects.map((project) => (project.id === data.id ? data : project))\n      );\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {}\n  };\n\n  const handleTasksModal = (project) => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n\n  const handleTaskClick = (task) => {\n    setSelectedTask(task);\n    setSelectedProject(task.project);\n  };\n\n  const handleAddTask = async (newTask) => {\n    try {\n      const response = await fetch(`/projects/${selectedProject.id}/tasks`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newTask),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to add task.\");\n      }\n\n      const data = await response.json();\n      setSelectedProject((prevProject) => ({\n        ...prevProject,\n        tasks: [...prevProject.tasks, data],\n      }));\n      setShowAddTaskModal(false);\n    } catch (error) {}\n  };\n\n  \n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`/projects/${selectedProject.id}/tasks/${taskId}`, {\n        method: \"DELETE\",\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to delete task.\");\n      }\n      setSelectedProject((prevProject) => ({\n        ...prevProject,\n        tasks: prevProject.tasks.filter((task) => task.id !== taskId),\n      }));\n    } catch (error) {}\n  };\n\n  const projectComponents = (user?.projects || []).map((eachProject) => {\n    return (\n      <Card key={eachProject.id}>\n        <Card.Content>\n          <Card.Header>{eachProject.name}</Card.Header>\n          <Card.Meta>{eachProject.status}</Card.Meta>\n          <Card.Description>{eachProject?.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic color=\"blue\" onClick={() => handleEdit(eachProject)}>\n            Manage\n          </Button>\n          <Button basic color=\"green\" onClick={() => handleTasksModal(eachProject)}>\n            Tasks\n          </Button>\n          <Button basic color=\"red\" onClick={() => handleDeleteModal(eachProject)}>\n            Delete\n          </Button>\n        </Card.Content>\n      </Card>\n    );\n  });\n\n  return (\n    <>\n      <div>\n      <ProjectForm setProjects={setProjects} projects={projects} />\n      </div>\n      <div className=\"projects-container\">{projectComponents}</div>\n      <Modal\n    open={showEditModal}\n    onClose={() => {\n      setShowEditModal(false);\n      setEditingProject(null);\n    }}\n  >\n    <Modal.Header>Manage Project</Modal.Header>\n    <Modal.Content>\n      <EditProjectForm\n        project={editingProject}\n        handleUpdateProject={handleUpdateProject}\n      />\n    </Modal.Content>\n  </Modal>\n  <Modal\n  open={showDeleteModal}\n  onClose={() => {\n    setShowDeleteModal(false);\n    setDeletingProject(null);\n  }}\n>\n  <Modal.Header>Delete Project</Modal.Header>\n  <Modal.Content>\n    <p>Are you sure you want to delete {deletingProject?.name}?</p>\n  </Modal.Content>\n  <Modal.Actions>\n    <Button\n      basic\n      color=\"red\"\n      onClick={() => {\n        handleDelete(deletingProject.id);\n        setShowDeleteModal(false);\n        setDeletingProject(null);\n        handleProjectDelete = {handleProjectDelete}\n        \n      }}\n    >\n      Delete\n    </Button>\n    <Button basic color=\"blue\" onClick={() => setShowDeleteModal(false)}>\n      Cancel\n    </Button>\n  </Modal.Actions>\n</Modal>\n<Modal\n  open={showTasksModal}\n  onClose={() => {\n    setShowTasksModal(false);\n    setSelectedProject(null);\n  }}\n  >\n    <Modal.Header>{selectedProject?.name} Tasks</Modal.Header>\n    <Modal.Content>\n      {selectedProject?.tasks?.length === 0 ? (\n        <p>No tasks assigned to this project.</p>\n      ) : (\n        <Card.Group>\n          {selectedProject?.tasks?.map((task) => (\n            <Card key={task.id} onClick={() => handleTaskClick(task)}>\n              <Card.Content>\n                <Card.Header>{task.name}</Card.Header>\n                <Card.Meta>{task.status}</Card.Meta>\n              </Card.Content>\n            </Card>\n          ))}\n        </Card.Group>\n      )}\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color=\"blue\" onClick={() => setShowTasksModal(false)}>\n        Close\n      </Button>\n    </Modal.Actions>\n  </Modal>\n  <Modal\n    open={!!selectedTask}\n    onClose={() => setSelectedTask(null)}\n  >\n    <Modal.Header>{selectedTask?.name}</Modal.Header>\n    <Modal.Content>\n      <p>Description: {selectedTask?.description}</p>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color=\"blue\" onClick={() => setSelectedTask(null)}>\n        Close\n      </Button>\n    </Modal.Actions>\n  </Modal>\n\n</>\n);\n          }\n\nexport default Projects;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}