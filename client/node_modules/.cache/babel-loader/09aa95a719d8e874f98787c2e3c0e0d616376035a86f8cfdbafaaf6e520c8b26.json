{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/MyContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/createContext();\nconst MyContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const handleLogin = async (username, password) => {\n    // Make API call to authenticate user\n    const response = await fetch('http://localhost:4000//login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // If login is successful, get user data and update context\n    if (response.ok) {\n      const userData = await response.json();\n      setUser(userData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      user,\n      handleLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(MyContextProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = MyContextProvider;\nexport { MyContext, MyContextProvider };\nvar _c;\n$RefreshReg$(_c, \"MyContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","MyContext","MyContextProvider","_ref","_s","children","user","setUser","handleLogin","username","password","response","fetch","method","body","JSON","stringify","headers","ok","userData","json","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/MyContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst MyContext = createContext();\n\nconst MyContextProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const handleLogin = async (username, password) => {\n    // Make API call to authenticate user\n    const response = await fetch('http://localhost:4000//login', {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // If login is successful, get user data and update context\n    if (response.ok) {\n      const userData = await response.json();\n      setUser(userData);\n    }\n  };\n\n  return (\n    <MyContext.Provider value={{ user, handleLogin }}>\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport { MyContext, MyContextProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,SAAS,gBAAGJ,aAAa,EAAE;AAEjC,MAAMK,iBAAiB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAChD;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,QAAQ;QAAEC;MAAS,CAAC,CAAC;MAC5CO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;;IAEF;IACA,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;MACtCb,OAAO,CAACY,QAAQ,CAAC;IACnB;EACF,CAAC;EAED,oBACEnB,OAAA,CAACC,SAAS,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,IAAI;MAAEE;IAAY,CAAE;IAAAH,QAAA,EAC9CA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAEzB,CAAC;AAACtB,EAAA,CAzBIF,iBAAiB;AAAAyB,EAAA,GAAjBzB,iBAAiB;AA2BvB,SAASD,SAAS,EAAEC,iBAAiB;AAAG,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}