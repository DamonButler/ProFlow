{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/ProjectCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectCard(_ref) {\n  let {\n    id,\n    name,\n    description,\n    start_date,\n    end_date,\n    status,\n    user_id,\n    onEdit,\n    onDelete\n  } = _ref;\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`/projects/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        // Remove the deleted project from the list of projects in state\n        setProjects(prevProjects => prevProjects.filter(project => project.id !== id));\n      } else {\n        throw new Error('Failed to delete project.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Start Date: \", start_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"End Date: \", end_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProjectCard","_ref","id","name","description","start_date","end_date","status","user_id","onEdit","onDelete","handleDelete","response","fetch","method","ok","setProjects","prevProjects","filter","project","Error","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/ProjectCard.js"],"sourcesContent":["import React from 'react';\n\nfunction ProjectCard({ id, name, description, start_date, end_date, status, user_id, onEdit, onDelete }) {\n    \n    const handleDelete = async (id) => {\n        try {\n          const response = await fetch(`/projects/${id}`, { method: 'DELETE' });\n          if (response.ok) {\n            // Remove the deleted project from the list of projects in state\n            setProjects((prevProjects) => prevProjects.filter((project) => project.id !== id));\n          } else {\n            throw new Error('Failed to delete project.');\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      };\n      \n    \n      return (\n        <div className=\"project-card\">\n          <h3>{name}</h3>\n          <p>{description}</p>\n          <p>Start Date: {start_date}</p>\n          <p>End Date: {end_date}</p>\n          <p>Status: {status}</p>\n          <p>User ID: {user_id}</p>\n          <button onClick={handleDelete}>Delete</button>\n        </div>\n      );\n    }\n    \n    export default ProjectCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAAC,IAAA,EAAqF;EAAA,IAApF;IAAEC,EAAE;IAAEC,IAAI;IAAEC,WAAW;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,OAAO;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAAT,IAAA;EAEnG,MAAMU,YAAY,GAAG,MAAOT,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYX,EAAG,EAAC,EAAE;QAAEY,MAAM,EAAE;MAAS,CAAC,CAAC;MACrE,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACf;QACAC,WAAW,CAAEC,YAAY,IAAKA,YAAY,CAACC,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACjB,EAAE,KAAKA,EAAE,CAAC,CAAC;MACpF,CAAC,MAAM;QACL,MAAM,IAAIkB,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAGD,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BzB,OAAA;MAAAyB,QAAA,EAAKrB;IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACf7B,OAAA;MAAAyB,QAAA,EAAIpB;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpB7B,OAAA;MAAAyB,QAAA,GAAG,cAAY,EAACnB,UAAU;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC/B7B,OAAA;MAAAyB,QAAA,GAAG,YAAU,EAAClB,QAAQ;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3B7B,OAAA;MAAAyB,QAAA,GAAG,UAAQ,EAACjB,MAAM;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvB7B,OAAA;MAAAyB,QAAA,GAAG,WAAS,EAAChB,OAAO;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzB7B,OAAA;MAAQ8B,OAAO,EAAElB,YAAa;MAAAa,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1C;AAEV;AAACE,EAAA,GA5BI9B,WAAW;AA8BhB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}