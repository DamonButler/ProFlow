{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/ProjectCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectCard(props) {\n  const {\n    id,\n    name,\n    description,\n    start_date,\n    end_date,\n    status\n  } = props;\n  const deleteProject = () => {\n    fetch(`/projects/${props.id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      if (data.delete === 'delete successful') {\n        // remove the project from the state\n        props.handleDelete(id);\n      }\n    }).catch(error => console.log(error));\n  };\n  const projectComponents = projects.map(eachProject => {\n    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n      ...eachProject,\n      handleDelete: handleDelete\n    }, eachProject.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [start_date, \" - \", end_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteProject,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProjectCard","props","id","name","description","start_date","end_date","status","deleteProject","fetch","method","then","response","json","data","delete","handleDelete","catch","error","console","log","projectComponents","projects","map","eachProject","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/ProjectCard.js"],"sourcesContent":["import React from 'react';\n\nfunction ProjectCard(props) {\n  const { id, name, description, start_date, end_date, status } = props;\n\n  const deleteProject = () => {\n    fetch(`/projects/${props.id}`, {\n      method: 'DELETE'\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.delete === 'delete successful') {\n          // remove the project from the state\n          props.handleDelete(id);\n        }\n      })\n      .catch(error => console.log(error));\n  }\n  const projectComponents = projects.map((eachProject) => {\n    return (\n      <ProjectCard \n        key={eachProject.id}\n        {...eachProject}\n        handleDelete={handleDelete}\n      />\n    )\n  })\n  return (\n    <div className=\"project-card\">\n      <h2>{name}</h2>\n      <p>{description}</p>\n      <p>{start_date} - {end_date}</p>\n      <p>{status}</p>\n      <button onClick={deleteProject}>Delete</button>\n    </div>\n  );\n}\n\nexport default ProjectCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,MAAM;IAAEC,EAAE;IAAEC,IAAI;IAAEC,WAAW;IAAEC,UAAU;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAGN,KAAK;EAErE,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1BC,KAAK,CAAE,aAAYR,KAAK,CAACC,EAAG,EAAC,EAAE;MAC7BQ,MAAM,EAAE;IACV,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,MAAM,KAAK,mBAAmB,EAAE;QACvC;QACAd,KAAK,CAACe,YAAY,CAACd,EAAE,CAAC;MACxB;IACF,CAAC,CAAC,CACDe,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC;EACD,MAAMG,iBAAiB,GAAGC,QAAQ,CAACC,GAAG,CAAEC,WAAW,IAAK;IACtD,oBACEzB,OAAA,CAACC,WAAW;MAAA,GAENwB,WAAW;MACfR,YAAY,EAAEA;IAAa,GAFtBQ,WAAW,CAACtB,EAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGnB;EAEN,CAAC,CAAC;EACF,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B/B,OAAA;MAAA+B,QAAA,EAAK3B;IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACf7B,OAAA;MAAA+B,QAAA,EAAI1B;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpB7B,OAAA;MAAA+B,QAAA,GAAIzB,UAAU,EAAC,KAAG,EAACC,QAAQ;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAChC7B,OAAA;MAAA+B,QAAA,EAAIvB;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACf7B,OAAA;MAAQgC,OAAO,EAAEvB,aAAc;MAAAsB,QAAA,EAAC;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3C;AAEV;AAACI,EAAA,GAlCQhC,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}