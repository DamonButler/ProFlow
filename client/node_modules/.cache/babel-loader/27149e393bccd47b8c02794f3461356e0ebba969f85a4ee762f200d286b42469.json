{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js\";\nimport React, { useState } from 'react';\nimport ProjectCard from './ProjectCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects(projects, addProjectsToState) {\n  const projectComponents = projects.map(eachProject => {\n    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n      ...eachProject\n    }, eachProject.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  });\n  function handleAddProject(newProject) {\n    fetch('/dogparks', {\n      method: 'POST',\n      body: newProject\n    }).then(r => r.ok ? r.json().then(data => addProjectsToState(data)) : alert('Please enter a valid url!'));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: projectComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","ProjectCard","jsxDEV","_jsxDEV","Projects","projects","addProjectsToState","projectComponents","map","eachProject","id","fileName","_jsxFileName","lineNumber","columnNumber","handleAddProject","newProject","fetch","method","body","then","r","ok","json","data","alert","children","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ProjectCard from './ProjectCard'\n\nfunction Projects(projects, addProjectsToState) {\n\n  const projectComponents = projects.map((eachProject) => {\n    return (\n      <ProjectCard \n      key = {eachProject.id}\n      {...eachProject}\n    />)\n  })\n\n  function handleAddProject (newProject) {\n\n    fetch('/dogparks', {\n      method: 'POST',\n      body: newProject\n    })\n    .then(r=>r.ok ?\n      r.json().then(data => addProjectsToState(data)) :\n      alert('Please enter a valid url!')\n    )\n\n }\n  return (\n    <div>\n      <h1>Projects</h1>\n      <div>{projectComponents}</div>\n    </div>\n  )\n}\n\nexport default Projects"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAACC,QAAQ,EAAEC,kBAAkB,EAAE;EAE9C,MAAMC,iBAAiB,GAAGF,QAAQ,CAACG,GAAG,CAAEC,WAAW,IAAK;IACtD,oBACEN,OAAA,CAACF,WAAW;MAAA,GAERQ;IAAW,GADRA,WAAW,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAErB;EACJ,CAAC,CAAC;EAEF,SAASC,gBAAgBA,CAAEC,UAAU,EAAE;IAErCC,KAAK,CAAC,WAAW,EAAE;MACjBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEH;IACR,CAAC,CAAC,CACDI,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,EAAE,GACXD,CAAC,CAACE,IAAI,EAAE,CAACH,IAAI,CAACI,IAAI,IAAIlB,kBAAkB,CAACkB,IAAI,CAAC,CAAC,GAC/CC,KAAK,CAAC,2BAA2B,CAAC,CACnC;EAEJ;EACC,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAQ;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjBX,OAAA;MAAAuB,QAAA,EAAMnB;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1B;AAEV;AAACa,EAAA,GA5BQvB,QAAQ;AA8BjB,eAAeA,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}