{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport { UserContext } from '../../User';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Projects(_ref) {\n  _s();\n  let {\n    handleProjectDelete\n  } = _ref;\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const {\n    user,\n    refreshUser\n  } = useContext(UserContext);\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const [showDeleteTaskModal, setShowDeleteTaskModal] = useState(false);\n  const [deletingTask, setDeletingTask] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\n  const [showEditTaskModal, setShowEditTaskModal] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch('/check_session');\n        const sessionData = await sessionResponse.json();\n        const userId = sessionData.id;\n        const response = await fetch(`/projects?user_id=${userId}`);\n        const data = await response.json();\n        const projectsWithUserId = data.map(project => ({\n          ...project,\n          user_id: userId\n        }));\n        setProjects(projectsWithUserId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handleDelete = projectId => {\n    console.log('Deleting project with ID:', projectId);\n    fetch(`/projects/${projectId}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      refreshUser();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleEdit = project => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n  const handleDeleteModal = project => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n  const handleUpdateProject = async updatedProject => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedProject)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n      const data = await response.json();\n      setProjects(projects => projects.map(project => project.id === data.id ? data : project));\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {}\n  };\n  const handleTasksModal = project => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n  };\n  const handleAddTaskModal = () => {\n    setShowAddTaskModal(true);\n  };\n  const handleAddTask = async newTask => {\n    try {\n      const response = await fetch(`/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add task.');\n      }\n      const data = await response.json();\n      setTasks([...tasks, data]);\n      setShowAddTaskModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete task.');\n      }\n      setTasks(tasks => tasks.filter(task => task.id !== taskId));\n      setShowDeleteTaskModal(false);\n      setDeletingTask(null);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleEditTaskModal = task => {\n    setSelectedTask(task);\n    setShowEditTaskModal(true);\n  };\n  const projectComponents = ((user === null || user === void 0 ? void 0 : user.projects) || []).map(eachProject => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: eachProject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: eachProject.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: eachProject === null || eachProject === void 0 ? void 0 : eachProject.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => handleEdit(eachProject),\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"green\",\n          onClick: () => handleTasksModal(eachProject),\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => handleDeleteModal(eachProject),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, eachProject.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProjectForm, {\n        setProjects: setProjects,\n        projects: projects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: projectComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showEditModal,\n      onClose: () => {\n        setShowEditModal(false);\n        setEditingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Manage Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(EditProjectForm, {\n          project: editingProject,\n          handleUpdateProject: handleUpdateProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showDeleteModal,\n      onClose: () => {\n        setShowDeleteModal(false);\n        setDeletingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Delete Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete \", deletingProject === null || deletingProject === void 0 ? void 0 : deletingProject.name, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => {\n            handleDelete(deletingProject.id);\n            setShowDeleteModal(false);\n            setDeletingProject(null);\n            handleProjectDelete = {\n              handleProjectDelete\n            };\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showTasksModal,\n      onClose: () => {\n        setShowTasksModal(false);\n        setSelectedProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.name, \" Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-item\",\n            onClick: () => handleEditTaskModal(task),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: task.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddTaskModal,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showAddTaskModal,\n      onClose: () => {\n        setShowAddTaskModal(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showEditTaskModal,\n      onClose: () => {\n        setShowEditTaskModal(false);\n        setSelectedTask(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Projects, \"IgbK2mdjGK8SRmpSy5dwAFilwGQ=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Modal","ProjectForm","EditProjectForm","UserContext","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_ref","_s","handleProjectDelete","projects","setProjects","editingProject","setEditingProject","showEditModal","setShowEditModal","deletingProject","setDeletingProject","showDeleteModal","setShowDeleteModal","selectedProject","setSelectedProject","showTasksModal","setShowTasksModal","selectedTask","setSelectedTask","user","refreshUser","tasks","setTasks","showAddTaskModal","setShowAddTaskModal","showDeleteTaskModal","setShowDeleteTaskModal","deletingTask","setDeletingTask","editingTask","setEditingTask","showEditTaskModal","setShowEditTaskModal","fetchData","sessionResponse","fetch","sessionData","json","userId","id","response","data","projectsWithUserId","map","project","user_id","error","console","log","handleDelete","projectId","method","then","catch","handleEdit","handleDeleteModal","handleUpdateProject","updatedProject","headers","body","JSON","stringify","ok","Error","handleTasksModal","handleTaskClick","task","handleAddTaskModal","handleAddTask","newTask","handleDeleteTask","taskId","filter","handleEditTaskModal","projectComponents","eachProject","children","Content","Header","name","fileName","_jsxFileName","lineNumber","columnNumber","Meta","status","Description","description","extra","basic","color","onClick","className","open","onClose","Actions","title","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport { UserContext } from '../../User';\nimport { useContext } from 'react';\n\n\nfunction Projects({handleProjectDelete}) {\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const {user, refreshUser} = useContext(UserContext)\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const [showDeleteTaskModal, setShowDeleteTaskModal] = useState(false);\n  const [deletingTask, setDeletingTask] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\nconst [showEditTaskModal, setShowEditTaskModal] = useState(false);\n\n\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch('/check_session');\n        const sessionData = await sessionResponse.json();\n        const userId = sessionData.id;\n        const response = await fetch(`/projects?user_id=${userId}`);\n        const data = await response.json();\n        \n        const projectsWithUserId = data.map(project => ({\n          ...project,\n          user_id: userId,\n        }));\n        setProjects(projectsWithUserId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  \n    fetchData();\n  }, []);\n\n  const handleDelete = (projectId) => {\n    console.log('Deleting project with ID:', projectId);\n    fetch(`/projects/${projectId}`, { method: \"DELETE\" })\n      .then(() => {\n        refreshUser();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  \n\n  const handleEdit = (project) => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n\n  const handleDeleteModal = (project) => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n\n  const handleUpdateProject = async (updatedProject) => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedProject),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n\n      const data = await response.json();\n      setProjects((projects) =>\n        projects.map((project) => (project.id === data.id ? data : project))\n      );\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {\n    }\n  };\n\n  const handleTasksModal = (project) => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n\n  const handleTaskClick = (task) => {\n    setSelectedTask(task);\n  };\n\n  const handleAddTaskModal = () => {\n    setShowAddTaskModal(true);\n  };\n  \n  const handleAddTask = async (newTask) => {\n    try {\n      const response = await fetch(`/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newTask),\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to add task.');\n      }\n  \n      const data = await response.json();\n      setTasks([...tasks, data]);\n      setShowAddTaskModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`/tasks/${taskId}`, {\n        method: 'DELETE',\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to delete task.');\n      }\n  \n      setTasks((tasks) => tasks.filter((task) => task.id !== taskId));\n      setShowDeleteTaskModal(false);\n      setDeletingTask(null);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditTaskModal = (task) => {\n    setSelectedTask(task);\n    setShowEditTaskModal(true);\n  };\n\nconst projectComponents = (user?.projects || []).map((eachProject) => {\n    return (\n      <Card key={eachProject.id}>\n        <Card.Content>\n          <Card.Header>{eachProject.name}</Card.Header>\n          <Card.Meta>{eachProject.status}</Card.Meta>\n          <Card.Description>{eachProject?.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic color='blue' onClick={() => handleEdit(eachProject)}>Manage</Button>\n          <Button basic color='green' onClick={() => handleTasksModal(eachProject)}>Tasks</Button>\n          <Button basic color='red' onClick={() => handleDeleteModal(eachProject)}>Delete</Button>\n        </Card.Content>\n      </Card>\n    );\n  });\n\n  return (\n    <>\n      <div>\n      <ProjectForm setProjects={setProjects} projects={projects} />\n      </div>\n      <div className=\"projects-container\">{projectComponents}</div>\n      <Modal\n    open={showEditModal}\n    onClose={() => {\n      setShowEditModal(false);\n      setEditingProject(null);\n    }}\n  >\n    <Modal.Header>Manage Project</Modal.Header>\n    <Modal.Content>\n      <EditProjectForm\n        project={editingProject}\n        handleUpdateProject={handleUpdateProject}\n      />\n    </Modal.Content>\n  </Modal>\n  <Modal\n  open={showDeleteModal}\n  onClose={() => {\n    setShowDeleteModal(false);\n    setDeletingProject(null);\n  }}\n>\n  <Modal.Header>Delete Project</Modal.Header>\n  <Modal.Content>\n    <p>Are you sure you want to delete {deletingProject?.name}?</p>\n  </Modal.Content>\n  <Modal.Actions>\n    <Button\n      basic\n      color=\"red\"\n      onClick={() => {\n        handleDelete(deletingProject.id);\n        setShowDeleteModal(false);\n        setDeletingProject(null);\n        handleProjectDelete = {handleProjectDelete}\n        \n      }}\n    >\n      Delete\n    </Button>\n    <Button basic color=\"blue\" onClick={() => setShowDeleteModal(false)}>\n      Cancel\n    </Button>\n  </Modal.Actions>\n</Modal>\n<Modal\n      open={showTasksModal}\n      onClose={() => {\n        setShowTasksModal(false);\n        setSelectedProject(null);\n      }}\n    >\n      <Modal.Header>{selectedProject?.name} Tasks</Modal.Header>\n      <Modal.Content>\n        <div className=\"task-list\">\n          {tasks.map((task) => (\n            <div\n              key={task.id}\n              className=\"task-item\"\n              onClick={() => handleEditTaskModal(task)}\n            >\n              <div>{task.title}</div>\n              <div>{task.status}</div>\n            </div>\n          ))}\n        </div>\n        <Button onClick={handleAddTaskModal}>Add Task</Button>\n      </Modal.Content>\n    </Modal>\n    <Modal\n      open={showAddTaskModal}\n      onClose={() => {\n        setShowAddTaskModal(false);\n      }}\n    >\n      <Modal.Header>Add Task</Modal.Header>\n      <Modal.Content>\n        {/* render form for adding task */}\n      </Modal.Content>\n    </Modal>\n    <Modal\n      open={showEditTaskModal}\n      onClose={() => {\n        setShowEditTaskModal(false);\n        setSelectedTask(null);\n      }}\n    >\n      <Modal.Header>Edit Task</Modal.Header>\n      <Modal.Content>\n        {/* render form for editing task */}\n      </Modal.Content>\n    </Modal>\n</>\n);\n          }\n\nexport default Projects;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}