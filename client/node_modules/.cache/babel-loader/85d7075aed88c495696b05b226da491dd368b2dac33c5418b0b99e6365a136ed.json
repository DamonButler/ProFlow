{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [deletingProjectId, setDeletingProjectId] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('/projects');\n        const data = await response.json();\n        setProjects(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`/projects/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete project.');\n      }\n      const updatedProjects = projects.filter(project => project.id !== id);\n      setProjects(updatedProjects);\n    } catch (error) {\n      console.log(error);\n    }\n    setShowDeleteModal(false);\n    setDeletingProjectId(null);\n  };\n  const handleEdit = project => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n  const handleShowDeleteModal = id => {\n    setDeletingProjectId(id);\n    setShowDeleteModal(true);\n  };\n  const handleUpdateProject = async updatedProject => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedProject)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n      const data = await response.json();\n      setProjects(projects => projects.map(project => project.id === data.id ? data : project));\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const projectComponents = projects.map(eachProject => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: eachProject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: eachProject.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: eachProject.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => handleEdit(eachProject),\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => handleShowDeleteModal(eachProject.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, eachProject.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: projectComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showEditModal,\n      onClose: () => {\n        setShowEditModal(false);\n        setEditingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Manage Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(EditProjectForm, {\n          project: editingProject,\n          handleUpdateProject: handleUpdateProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Projects, \"nzwhZbKdnPHkYOO8YlYt+MkEBfU=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Modal","ProjectForm","EditProjectForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_s","projects","setProjects","editingProject","setEditingProject","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","deletingProjectId","setDeletingProjectId","fetchData","response","fetch","data","json","error","console","log","handleDelete","id","method","ok","Error","updatedProjects","filter","project","handleEdit","handleShowDeleteModal","handleUpdateProject","updatedProject","headers","body","JSON","stringify","map","projectComponents","eachProject","children","Content","Header","name","fileName","_jsxFileName","lineNumber","columnNumber","Meta","status","Description","description","extra","basic","color","onClick","className","open","onClose","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\n\nfunction Projects() {\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [deletingProjectId, setDeletingProjectId] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('/projects');\n        const data = await response.json();\n        setProjects(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`/projects/${id}`, { method: 'DELETE' });\n      if (!response.ok) {\n        throw new Error('Failed to delete project.');\n      }\n      const updatedProjects = projects.filter((project) => project.id !== id);\n      setProjects(updatedProjects);\n    } catch (error) {\n      console.log(error);\n    }\n    setShowDeleteModal(false);\n    setDeletingProjectId(null);\n  };\n\n  const handleEdit = (project) => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n\n  const handleShowDeleteModal = (id) => {\n    setDeletingProjectId(id);\n    setShowDeleteModal(true);\n  };\n\n  const handleUpdateProject = async (updatedProject) => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedProject),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n\n      const data = await response.json();\n      setProjects((projects) =>\n        projects.map((project) => (project.id === data.id ? data : project))\n      );\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const projectComponents = projects.map((eachProject) => {\n    return (\n      <Card key={eachProject.id}>\n        <Card.Content>\n          <Card.Header>{eachProject.name}</Card.Header>\n          <Card.Meta>{eachProject.status}</Card.Meta>\n          <Card.Description>{eachProject.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic color='blue' onClick={() => handleEdit(eachProject)}>Manage</Button>\n          <Button basic color='red' onClick={() => handleShowDeleteModal(eachProject.id)}>Delete</Button>\n        </Card.Content>\n      </Card>\n    );\n  });\n\n  return (\n    <>\n      <div>\n        <ProjectForm />\n      </div>\n      <div className=\"projects-container\">{projectComponents}</div>\n      <Modal\n  open={showEditModal}\n  onClose={() => {\n    setShowEditModal(false);\n    setEditingProject(null);\n  }}\n>\n        <Modal.Header>Manage Project</Modal.Header>\n        <Modal.Content>\n    <EditProjectForm\n      project={editingProject}\n      handleUpdateProject={handleUpdateProject}\n    />\n</Modal.Content>\n      </Modal>\n    </>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}