{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetch('/projects').then(response => response.json()).then(data => setProjects(data)).catch(error => console.log(error));\n  }, []);\n  const handleUpdate = updatedProject => {\n    const updatedProjects = projects.map(project => {\n      if (project.id === updatedProject.id) {\n        return updatedProject;\n      } else {\n        return project;\n      }\n    });\n    setProjects(updatedProjects);\n  };\n  const handleDelete = deletedProjectId => {\n    const updatedProjects = projects.filter(project => project.id !== deletedProjectId);\n    setProjects(updatedProjects);\n  };\n  const projectComponents = projects.map(eachProject => {\n    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project: eachProject,\n      onUpdate: handleUpdate,\n      onDelete: handleDelete\n    }, eachProject.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: projectComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n}\n_s(Projects, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["Projects","_s","projects","setProjects","useState","useEffect","fetch","then","response","json","data","catch","error","console","log","handleUpdate","updatedProject","updatedProjects","map","project","id","handleDelete","deletedProjectId","filter","projectComponents","eachProject","_jsxDEV","ProjectCard","onUpdate","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","_Fragment","children","ProjectForm","className","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js"],"sourcesContent":["function Projects() {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    fetch('/projects')\n      .then(response => response.json())\n      .then(data => setProjects(data))\n      .catch(error => console.log(error));\n  }, []);\n\n  const handleUpdate = (updatedProject) => {\n    const updatedProjects = projects.map((project) => {\n      if (project.id === updatedProject.id) {\n        return updatedProject;\n      } else {\n        return project;\n      }\n    });\n    setProjects(updatedProjects);\n  };\n\n  const handleDelete = (deletedProjectId) => {\n    const updatedProjects = projects.filter((project) => project.id !== deletedProjectId);\n    setProjects(updatedProjects);\n  };\n\n  const projectComponents = projects.map((eachProject) => {\n    return (\n      <ProjectCard \n        key={eachProject.id}\n        project={eachProject}\n        onUpdate={handleUpdate}\n        onDelete={handleDelete}\n      />\n    )\n  })\n\n  return (\n    <><div><ProjectForm /></div><div className=\"projects-container\">\n      {projectComponents}\n    </div></>\n  );\n}"],"mappings":";;;;AAAA,SAASA,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAAC,WAAW,CAAC,CACfC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,WAAW,CAACO,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAIC,cAAc,IAAK;IACvC,MAAMC,eAAe,GAAGf,QAAQ,CAACgB,GAAG,CAAEC,OAAO,IAAK;MAChD,IAAIA,OAAO,CAACC,EAAE,KAAKJ,cAAc,CAACI,EAAE,EAAE;QACpC,OAAOJ,cAAc;MACvB,CAAC,MAAM;QACL,OAAOG,OAAO;MAChB;IACF,CAAC,CAAC;IACFhB,WAAW,CAACc,eAAe,CAAC;EAC9B,CAAC;EAED,MAAMI,YAAY,GAAIC,gBAAgB,IAAK;IACzC,MAAML,eAAe,GAAGf,QAAQ,CAACqB,MAAM,CAAEJ,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKE,gBAAgB,CAAC;IACrFnB,WAAW,CAACc,eAAe,CAAC;EAC9B,CAAC;EAED,MAAMO,iBAAiB,GAAGtB,QAAQ,CAACgB,GAAG,CAAEO,WAAW,IAAK;IACtD,oBACEC,OAAA,CAACC,WAAW;MAEVR,OAAO,EAAEM,WAAY;MACrBG,QAAQ,EAAEb,YAAa;MACvBc,QAAQ,EAAER;IAAa,GAHlBI,WAAW,CAACL,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAInB;EAEN,CAAC,CAAC;EAEF,oBACEP,OAAA,CAAAQ,SAAA;IAAAC,QAAA,gBAAET,OAAA;MAAAS,QAAA,eAAKT,OAAA,CAACU,WAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAAAP,OAAA;MAAKW,SAAS,EAAC,oBAAoB;MAAAF,QAAA,EAC5DX;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd;EAAA,gBAAG;AAEb;AAAChC,EAAA,CA1CQD,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}