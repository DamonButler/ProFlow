{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport { UserContext } from '../../User';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Projects(_ref) {\n  _s();\n  var _selectedProject$task, _selectedProject$task2;\n  let {\n    id,\n    handleProjectDelete\n  } = _ref;\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const {\n    user,\n    setUser,\n    refreshUserProjects,\n    deleteUserProject\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch('/check_session');\n        const sessionData = await sessionResponse.json();\n        const userId = sessionData.id;\n        console.log(userId);\n        const response = await fetch(`/projects?user_id=${userId}`);\n        const data = await response.json();\n        const projectsWithUserId = data.map(project => ({\n          ...project,\n          user_id: userId\n        }));\n        console.log(projectsWithUserId);\n        setProjects(projectsWithUserId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // const handleDelete = (projectId) => {\n  //   console.log('Deleting project with ID:', projectId);\n  //   fetch(`/projects/${projectId}`, { method: \"DELETE\" })\n  //     .then(() => {\n  //       refreshUserProjects();\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // };\n\n  const handleDelete = () => {\n    handleProjectDelete(id);\n    deleteUserProject(id);\n    fetch(`/projects/${id}`, {\n      method: \"DELETE\"\n    });\n  };\n  const handleEdit = project => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n  const handleDeleteModal = project => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n  const handleUpdateProject = async updatedProject => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedProject)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n      const data = await response.json();\n      setProjects(projects => projects.map(project => project.id === data.id ? data : project));\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleTasksModal = project => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n  };\n  const projectComponents = ((user === null || user === void 0 ? void 0 : user.projects) || []).map(eachProject => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: eachProject === null || eachProject === void 0 ? void 0 : eachProject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: eachProject === null || eachProject === void 0 ? void 0 : eachProject.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: eachProject === null || eachProject === void 0 ? void 0 : eachProject.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => handleEdit(eachProject),\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"green\",\n          onClick: () => handleTasksModal(eachProject),\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => handleDeleteModal(eachProject),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, eachProject === null || eachProject === void 0 ? void 0 : eachProject.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: projectComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showEditModal,\n      onClose: () => {\n        setShowEditModal(false);\n        setEditingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Manage Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(EditProjectForm, {\n          project: editingProject,\n          handleUpdateProject: handleUpdateProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showDeleteModal,\n      onClose: () => {\n        setShowDeleteModal(false);\n        setDeletingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Delete Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete \", deletingProject === null || deletingProject === void 0 ? void 0 : deletingProject.name, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => {\n            handleDelete(deletingProject.id);\n            setShowDeleteModal(false);\n            setDeletingProject(null);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showTasksModal,\n      onClose: () => {\n        setShowTasksModal(false);\n        setSelectedProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.name, \" Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: (selectedProject === null || selectedProject === void 0 ? void 0 : (_selectedProject$task = selectedProject.tasks) === null || _selectedProject$task === void 0 ? void 0 : _selectedProject$task.length) === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tasks assigned to this project.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Card.Group, {\n          children: selectedProject === null || selectedProject === void 0 ? void 0 : (_selectedProject$task2 = selectedProject.tasks) === null || _selectedProject$task2 === void 0 ? void 0 : _selectedProject$task2.map(task => /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => handleTaskClick(task),\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setShowTasksModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: !!selectedTask,\n      onClose: () => setSelectedTask(null),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setSelectedTask(null),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(Projects, \"MBisM5SxMDCnkoeZkgI0DYYr2S0=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Modal","ProjectForm","EditProjectForm","UserContext","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_ref","_s","_selectedProject$task","_selectedProject$task2","id","handleProjectDelete","projects","setProjects","editingProject","setEditingProject","showEditModal","setShowEditModal","deletingProject","setDeletingProject","showDeleteModal","setShowDeleteModal","selectedProject","setSelectedProject","showTasksModal","setShowTasksModal","selectedTask","setSelectedTask","user","setUser","refreshUserProjects","deleteUserProject","fetchData","sessionResponse","fetch","sessionData","json","userId","console","log","response","data","projectsWithUserId","map","project","user_id","error","handleDelete","method","handleEdit","handleDeleteModal","handleUpdateProject","updatedProject","headers","body","JSON","stringify","ok","Error","handleTasksModal","handleTaskClick","task","projectComponents","eachProject","children","Content","Header","name","fileName","_jsxFileName","lineNumber","columnNumber","Meta","status","Description","description","extra","basic","color","onClick","className","open","onClose","Actions","tasks","length","Group","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport { UserContext } from '../../User';\nimport { useContext } from 'react';\n\n\nfunction Projects({id, handleProjectDelete}) {\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const {user, setUser, refreshUserProjects, deleteUserProject} = useContext(UserContext)\n\n\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch('/check_session');\n        const sessionData = await sessionResponse.json();\n        const userId = sessionData.id;\n        console.log(userId)\n  \n        const response = await fetch(`/projects?user_id=${userId}`);\n        const data = await response.json();\n        \n        const projectsWithUserId = data.map(project => ({\n          ...project,\n          user_id: userId,\n        }));\n        console.log(projectsWithUserId)\n        setProjects(projectsWithUserId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  \n    fetchData();\n  }, []);\n\n  // const handleDelete = (projectId) => {\n  //   console.log('Deleting project with ID:', projectId);\n  //   fetch(`/projects/${projectId}`, { method: \"DELETE\" })\n  //     .then(() => {\n  //       refreshUserProjects();\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // };\n\n  const handleDelete = () => {\n    handleProjectDelete(id)\n    deleteUserProject(id)\n    fetch(`/projects/${id}`, {\n      method: \"DELETE\"\n  })\n  }\n\n  const handleEdit = (project) => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n\n  const handleDeleteModal = (project) => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n\n  const handleUpdateProject = async (updatedProject) => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedProject),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n\n      const data = await response.json();\n      setProjects((projects) =>\n        projects.map((project) => (project.id === data.id ? data : project))\n      );\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTasksModal = (project) => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n\n  const handleTaskClick = (task) => {\n    setSelectedTask(task);\n  };\n\nconst projectComponents = (user?.projects || []).map((eachProject) => {\n    return (\n      <Card key={eachProject?.id}>\n        <Card.Content>\n          <Card.Header>{eachProject?.name}</Card.Header>\n          <Card.Meta>{eachProject?.status}</Card.Meta>\n          <Card.Description>{eachProject?.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic color='blue' onClick={() => handleEdit(eachProject)}>Manage</Button>\n          <Button basic color='green' onClick={() => handleTasksModal(eachProject)}>Tasks</Button>\n          <Button basic color='red' onClick={() => handleDeleteModal(eachProject)}>Delete</Button>\n        </Card.Content>\n      </Card>\n    );\n  });\n\n  return (\n    <>\n      <div>\n        <ProjectForm />\n      </div>\n      <div className=\"projects-container\">{projectComponents}</div>\n      <Modal\n    open={showEditModal}\n    onClose={() => {\n      setShowEditModal(false);\n      setEditingProject(null);\n    }}\n  >\n    <Modal.Header>Manage Project</Modal.Header>\n    <Modal.Content>\n      <EditProjectForm\n        project={editingProject}\n        handleUpdateProject={handleUpdateProject}\n      />\n    </Modal.Content>\n  </Modal>\n  <Modal\n    open={showDeleteModal}\n    onClose={() => {\n      setShowDeleteModal(false);\n      setDeletingProject(null);\n    }}\n  >\n    <Modal.Header>Delete Project</Modal.Header>\n    <Modal.Content>\n      <p>Are you sure you want to delete {deletingProject?.name}?</p>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button\n        basic\n        color=\"red\"\n        onClick={() => {\n          handleDelete(deletingProject.id);\n          setShowDeleteModal(false);\n          setDeletingProject(null);\n        }}\n      >\n        Delete\n      </Button>\n      <Button basic color=\"blue\" onClick={() => setShowDeleteModal(false)}>\n        Cancel\n      </Button>\n    </Modal.Actions>\n  </Modal>\n  <Modal\n    open={showTasksModal}\n    onClose={() => {\n      setShowTasksModal(false);\n      setSelectedProject(null);\n    }}\n  >\n    <Modal.Header>{selectedProject?.name} Tasks</Modal.Header>\n    <Modal.Content>\n      {selectedProject?.tasks?.length === 0 ? (\n        <p>No tasks assigned to this project.</p>\n      ) : (\n        <Card.Group>\n          {selectedProject?.tasks?.map((task) => (\n            <Card key={task.id} onClick={() => handleTaskClick(task)}>\n              <Card.Content>\n                <Card.Header>{task.name}</Card.Header>\n                <Card.Meta>{task.status}</Card.Meta>\n              </Card.Content>\n            </Card>\n          ))}\n        </Card.Group>\n      )}\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color=\"blue\" onClick={() => setShowTasksModal(false)}>\n        Close\n      </Button>\n    </Modal.Actions>\n  </Modal>\n  <Modal\n    open={!!selectedTask}\n    onClose={() => setSelectedTask(null)}\n  >\n    <Modal.Header>{selectedTask?.name}</Modal.Header>\n    <Modal.Content>\n      <p>Description: {selectedTask?.description}</p>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color=\"blue\" onClick={() => setSelectedTask(null)}>\n        Close\n      </Button>\n    </Modal.Actions>\n  </Modal>\n</>\n);\n          }\n\nexport default Projects;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}