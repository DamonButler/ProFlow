{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/User.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext();\nfunction UserProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    fetch(\"/check_session\").then(r => {\n      if (r.ok) {\n        r.json().then(user => setUser(user));\n      }\n    });\n  }, []);\n  const deleteUserPost = id => {\n    const userCopy = {\n      ...user\n    };\n    userCopy.posts = userCopy.posts.filter(post => {\n      return post.id !== id;\n    });\n    setUser(userCopy);\n  };\n  const refreshUser = () => {\n    fetch(\"/check_session\").then(r => {\n      if (r.ok) {\n        r.json().then(user => setUser(user));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      refreshUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserContext","createContext","UserProvider","_ref","_s","children","user","setUser","fetch","then","r","ok","json","deleteUserPost","id","userCopy","posts","filter","post","refreshUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/User.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst UserContext = React.createContext();\n\nfunction UserProvider({children}) {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/check_session\").then(r => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  const deleteUserPost = (id) => {\n    const userCopy = {...user}\n    userCopy.posts = userCopy.posts.filter(post => {\n        return post.id !== id\n    })\n    setUser(userCopy)\n}\n\n  const refreshUser = () => {\n    fetch(\"/check_session\").then(r => {\n        if (r.ok) {\n            r.json().then((user) => setUser(user));\n        }\n    });\n}\n\nreturn(\n  <UserContext.Provider value = {{user, setUser, refreshUser}}>\n    {children}\n  </UserContext.Provider>\n)\n}\n\nexport {UserContext, UserProvider}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAa,EAAE;AAEzC,SAASC,YAAYA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAI;MAChC,IAAIA,CAAC,CAACC,EAAE,EAAE;QACRD,CAAC,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEH,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;MACxC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,cAAc,GAAIC,EAAE,IAAK;IAC7B,MAAMC,QAAQ,GAAG;MAAC,GAAGT;IAAI,CAAC;IAC1BS,QAAQ,CAACC,KAAK,GAAGD,QAAQ,CAACC,KAAK,CAACC,MAAM,CAACC,IAAI,IAAI;MAC3C,OAAOA,IAAI,CAACJ,EAAE,KAAKA,EAAE;IACzB,CAAC,CAAC;IACFP,OAAO,CAACQ,QAAQ,CAAC;EACrB,CAAC;EAEC,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBX,KAAK,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAI;MAC9B,IAAIA,CAAC,CAACC,EAAE,EAAE;QACND,CAAC,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEH,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;MAC1C;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAI;MAACf,IAAI;MAAEC,OAAO;MAAEY;IAAW,CAAE;IAAAd,QAAA,EACzDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAEzB;AAACrB,EAAA,CAhCQF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAkCrB,SAAQF,WAAW,EAAEE,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}