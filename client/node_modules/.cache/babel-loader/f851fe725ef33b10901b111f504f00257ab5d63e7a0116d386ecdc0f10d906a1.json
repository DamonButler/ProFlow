{"ast":null,"code":"var _jsxFileName = \"/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport { UserContext } from '../../User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  var _selectedProject$task, _selectedProject$task2;\n  const [projectsData, setProjectsData] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const {\n    user_id\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch('/check_session');\n        const sessionData = await sessionResponse.json();\n        console.log('User data:', sessionData);\n        const userId = sessionData.user_id;\n        const projectsResponse = await fetch(`/projects?user_id=${userId}`);\n        const allProjectsData = await projectsResponse.json();\n        const userProjectsData = allProjectsData.filter(project => project.user_id === userId);\n        setProjectsData(userProjectsData);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setProjects(projectsData);\n  }, [projectsData]);\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`/projects/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete project.');\n      }\n      const updatedProjects = projects.filter(project => project.id !== id);\n      setProjects(updatedProjects);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleEdit = project => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n  const handleDeleteModal = project => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n  const handleUpdateProject = async updatedProject => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedProject)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n      const data = await response.json();\n      setProjects(projects => projects.map(project => project.id === data.id ? data : project));\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleTasksModal = project => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n  };\n  const projectComponents = projects.map(eachProject => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: eachProject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: eachProject.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: eachProject.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => handleEdit(eachProject),\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"green\",\n          onClick: () => handleTasksModal(eachProject),\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => handleDeleteModal(eachProject),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, eachProject.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: projectComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showEditModal,\n      onClose: () => {\n        setShowEditModal(false);\n        setEditingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Manage Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(EditProjectForm, {\n          project: editingProject,\n          handleUpdateProject: handleUpdateProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showDeleteModal,\n      onClose: () => {\n        setShowDeleteModal(false);\n        setDeletingProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Delete Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete \", deletingProject === null || deletingProject === void 0 ? void 0 : deletingProject.name, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: () => {\n            handleDelete(deletingProject.id);\n            setShowDeleteModal(false);\n            setDeletingProject(null);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showTasksModal,\n      onClose: () => {\n        setShowTasksModal(false);\n        setSelectedProject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.name, \" Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: (selectedProject === null || selectedProject === void 0 ? void 0 : (_selectedProject$task = selectedProject.tasks) === null || _selectedProject$task === void 0 ? void 0 : _selectedProject$task.length) === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tasks assigned to this project.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Card.Group, {\n          children: selectedProject === null || selectedProject === void 0 ? void 0 : (_selectedProject$task2 = selectedProject.tasks) === null || _selectedProject$task2 === void 0 ? void 0 : _selectedProject$task2.map(task => /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => handleTaskClick(task),\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setShowTasksModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: !!selectedTask,\n      onClose: () => setSelectedTask(null),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"blue\",\n          onClick: () => setSelectedTask(null),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(Projects, \"ZB0mftWtbJHnaYVNZOXdrSlbfnM=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Button","Card","Modal","ProjectForm","EditProjectForm","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_s","_selectedProject$task","_selectedProject$task2","projectsData","setProjectsData","projects","setProjects","editingProject","setEditingProject","showEditModal","setShowEditModal","deletingProject","setDeletingProject","showDeleteModal","setShowDeleteModal","selectedProject","setSelectedProject","showTasksModal","setShowTasksModal","selectedTask","setSelectedTask","user_id","fetchData","sessionResponse","fetch","sessionData","json","console","log","userId","projectsResponse","allProjectsData","userProjectsData","filter","project","error","handleDelete","id","response","method","ok","Error","updatedProjects","handleEdit","handleDeleteModal","handleUpdateProject","updatedProject","headers","body","JSON","stringify","data","map","handleTasksModal","handleTaskClick","task","projectComponents","eachProject","children","Content","Header","name","fileName","_jsxFileName","lineNumber","columnNumber","Meta","status","Description","description","extra","basic","color","onClick","className","open","onClose","Actions","tasks","length","Group","_c","$RefreshReg$"],"sources":["/Users/damonbutler/Development/code/phase-5/phase-5-project/phase-5-project/client/src/components/Projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Button, Card, Modal } from 'semantic-ui-react';\nimport ProjectForm from './ProjectForm';\nimport EditProjectForm from './EditProjectForm';\nimport { UserContext } from '../../User';\n\nfunction Projects() {\n  const [projectsData, setProjectsData] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [deletingProject, setDeletingProject] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showTasksModal, setShowTasksModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const { user_id } = useContext(UserContext);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const sessionResponse = await fetch('/check_session');\n        const sessionData = await sessionResponse.json();\n        console.log('User data:', sessionData);\n        const userId = sessionData.user_id;\n  \n        const projectsResponse = await fetch(`/projects?user_id=${userId}`);\n        const allProjectsData = await projectsResponse.json();\n        const userProjectsData = allProjectsData.filter((project) => project.user_id === userId);\n        setProjectsData(userProjectsData);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  \n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setProjects(projectsData);\n  }, [projectsData]);\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`/projects/${id}`, { method: 'DELETE' });\n      if (!response.ok) {\n        throw new Error('Failed to delete project.');\n      }\n      const updatedProjects = projects.filter((project) => project.id !== id);\n      setProjects(updatedProjects);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (project) => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n\n  const handleDeleteModal = (project) => {\n    setDeletingProject(project);\n    setShowDeleteModal(true);\n  };\n\n  const handleUpdateProject = async (updatedProject) => {\n    try {\n      const response = await fetch(`/projects/${updatedProject.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedProject),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update project.');\n      }\n\n      const data = await response.json();\n      setProjects((projects) =>\n        projects.map((project) => (project.id === data.id ? data : project))\n      );\n      setEditingProject(null);\n      setShowEditModal(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTasksModal = (project) => {\n    setSelectedProject(project);\n    setShowTasksModal(true);\n  };\n\n  const handleTaskClick = (task) => {\n    setSelectedTask(task);\n  };\n\n  const projectComponents = projects.map((eachProject) => {\n    return (\n      <Card key={eachProject.id}>\n        <Card.Content>\n          <Card.Header>{eachProject.name}</Card.Header>\n          <Card.Meta>{eachProject.status}</Card.Meta>\n          <Card.Description>{eachProject.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic color='blue' onClick={() => handleEdit(eachProject)}>Manage</Button>\n          <Button basic color='green' onClick={() => handleTasksModal(eachProject)}>Tasks</Button>\n          <Button basic color='red' onClick={() => handleDeleteModal(eachProject)}>Delete</Button>\n        </Card.Content>\n      </Card>\n    );\n  });\n\n  return (\n    <>\n      <div>\n        <ProjectForm />\n      </div>\n      {user_id && (\n        <div className=\"projects-container\">{projectComponents}</div>\n      )}\n      <Modal\n    open={showEditModal}\n    onClose={() => {\n      setShowEditModal(false);\n      setEditingProject(null);\n    }}\n  >\n    <Modal.Header>Manage Project</Modal.Header>\n    <Modal.Content>\n      <EditProjectForm\n        project={editingProject}\n        handleUpdateProject={handleUpdateProject}\n      />\n    </Modal.Content>\n  </Modal>\n  <Modal\n    open={showDeleteModal}\n    onClose={() => {\n      setShowDeleteModal(false);\n      setDeletingProject(null);\n    }}\n  >\n    <Modal.Header>Delete Project</Modal.Header>\n    <Modal.Content>\n      <p>Are you sure you want to delete {deletingProject?.name}?</p>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button\n        basic\n        color=\"red\"\n        onClick={() => {\n          handleDelete(deletingProject.id);\n          setShowDeleteModal(false);\n          setDeletingProject(null);\n        }}\n      >\n        Delete\n      </Button>\n      <Button basic color=\"blue\" onClick={() => setShowDeleteModal(false)}>\n        Cancel\n      </Button>\n    </Modal.Actions>\n  </Modal>\n  <Modal\n    open={showTasksModal}\n    onClose={() => {\n      setShowTasksModal(false);\n      setSelectedProject(null);\n    }}\n  >\n    <Modal.Header>{selectedProject?.name} Tasks</Modal.Header>\n    <Modal.Content>\n      {selectedProject?.tasks?.length === 0 ? (\n        <p>No tasks assigned to this project.</p>\n      ) : (\n        <Card.Group>\n          {selectedProject?.tasks?.map((task) => (\n            <Card key={task.id} onClick={() => handleTaskClick(task)}>\n              <Card.Content>\n                <Card.Header>{task.name}</Card.Header>\n                <Card.Meta>{task.status}</Card.Meta>\n              </Card.Content>\n            </Card>\n          ))}\n        </Card.Group>\n      )}\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color=\"blue\" onClick={() => setShowTasksModal(false)}>\n        Close\n      </Button>\n    </Modal.Actions>\n  </Modal>\n  <Modal\n    open={!!selectedTask}\n    onClose={() => setSelectedTask(null)}\n  >\n    <Modal.Header>{selectedTask?.name}</Modal.Header>\n    <Modal.Content>\n      <p>Description: {selectedTask?.description}</p>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color=\"blue\" onClick={() => setSelectedTask(null)}>\n        Close\n      </Button>\n    </Modal.Actions>\n  </Modal>\n</>\n);\n          }\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}